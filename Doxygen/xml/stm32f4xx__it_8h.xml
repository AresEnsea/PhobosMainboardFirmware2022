<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="fr">
  <compounddef id="stm32f4xx__it_8h" kind="file" language="C++">
    <compoundname>stm32f4xx_it.h</compoundname>
    <includedby refid="stm32f4xx__it_8c" local="yes">Core/Src/stm32f4xx_it.c</includedby>
    <invincdepgraph>
      <node id="1">
        <label>Core/Inc/stm32f4xx_it.h</label>
        <link refid="stm32f4xx__it_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Core/Src/stm32f4xx_it.c</label>
        <link refid="stm32f4xx__it_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="stm32f4xx__it_8h_1a6ad7a5e3ee69cb6db6a6b9111ba898bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NMI_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>NMI_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Non maskable interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32f4xx_it.h" line="50" column="6" bodyfile="Core/Src/stm32f4xx_it.c" bodystart="73" bodyend="83" declfile="Core/Inc/stm32f4xx_it.h" declline="50" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8h_1a2bffc10d5bd4106753b7c30e86903bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HardFault_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>HardFault_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Hard fault interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32f4xx_it.h" line="51" column="6" bodyfile="Core/Src/stm32f4xx_it.c" bodystart="88" bodyend="98" declfile="Core/Inc/stm32f4xx_it.h" declline="51" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8h_1a3150f74512510287a942624aa9b44cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MemManage_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>MemManage_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Memory management fault. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32f4xx_it.h" line="52" column="6" bodyfile="Core/Src/stm32f4xx_it.c" bodystart="103" bodyend="113" declfile="Core/Inc/stm32f4xx_it.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8h_1a850cefb17a977292ae5eb4cafa9976c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BusFault_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>BusFault_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Pre-fetch fault, memory access fault. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32f4xx_it.h" line="53" column="6" bodyfile="Core/Src/stm32f4xx_it.c" bodystart="118" bodyend="128" declfile="Core/Inc/stm32f4xx_it.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8h_1a1d98923de2ed6b7309b66f9ba2971647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UsageFault_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>UsageFault_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Undefined instruction or illegal state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32f4xx_it.h" line="54" column="6" bodyfile="Core/Src/stm32f4xx_it.c" bodystart="133" bodyend="143" declfile="Core/Inc/stm32f4xx_it.h" declline="54" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8h_1a3e5ddb3df0d62f2dc357e64a3f04a6ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SVC_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>SVC_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles System service call via SWI instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32f4xx_it.h" line="55" column="6" bodyfile="Core/Src/stm32f4xx_it.c" bodystart="148" bodyend="156" declfile="Core/Inc/stm32f4xx_it.h" declline="55" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8h_1adbdfb05858cc36fc520974df37ec3cb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DebugMon_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>DebugMon_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Debug monitor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32f4xx_it.h" line="56" column="6" bodyfile="Core/Src/stm32f4xx_it.c" bodystart="161" bodyend="169" declfile="Core/Inc/stm32f4xx_it.h" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8h_1a6303e1f258cbdc1f970ce579cc015623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PendSV_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>PendSV_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Pendable request for system service. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32f4xx_it.h" line="57" column="6" bodyfile="Core/Src/stm32f4xx_it.c" bodystart="174" bodyend="182" declfile="Core/Inc/stm32f4xx_it.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8h_1ab5e09814056d617c521549e542639b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SysTick_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>SysTick_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles System tick timer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32f4xx_it.h" line="58" column="6" bodyfile="Core/Src/stm32f4xx_it.c" bodystart="187" bodyend="196" declfile="Core/Inc/stm32f4xx_it.h" declline="58" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8h_1a38ad4725462bdc5e86c4ead4f04b9fc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TIM2_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>TIM2_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles TIM2 global interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32f4xx_it.h" line="59" column="6" bodyfile="Core/Src/stm32f4xx_it.c" bodystart="208" bodyend="217" declfile="Core/Inc/stm32f4xx_it.h" declline="59" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8h_1a7133f3f78767503641d307386e68bd28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TIM4_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>TIM4_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles TIM4 global interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32f4xx_it.h" line="60" column="6" bodyfile="Core/Src/stm32f4xx_it.c" bodystart="222" bodyend="231" declfile="Core/Inc/stm32f4xx_it.h" declline="60" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8h_1a0839a45f331c4c067939b9c4533bbf4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TIM6_DAC_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>TIM6_DAC_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles TIM6 global interrupt and DAC1, DAC2 underrun error interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32f4xx_it.h" line="61" column="6" bodyfile="Core/Src/stm32f4xx_it.c" bodystart="236" bodyend="245" declfile="Core/Inc/stm32f4xx_it.h" declline="61" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32f4xx__it_8h_1a98cff83252098363b2dbca9608df964e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TIM7_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>TIM7_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles TIM7 global interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32f4xx_it.h" line="62" column="6" bodyfile="Core/Src/stm32f4xx_it.c" bodystart="250" bodyend="259" declfile="Core/Inc/stm32f4xx_it.h" declline="62" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains the headers of the interrupt handlers. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="attention"><para></para>
</simplesect>
<heading level="2"><center><copy/> Copyright (c) 2021 STMicroelectronics. All rights reserved.</center></heading>
</para>
<para>This software component is licensed by ST under BSD 3-Clause license, the &quot;License&quot;; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>Header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>Header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Define<sp/>to<sp/>prevent<sp/>recursive<sp/>inclusion<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STM32F4xx_IT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STM32F4xx_IT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>includes<sp/>----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>Includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>Includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>types<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>ET<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>ET<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>constants<sp/>--------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>EC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>EC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>macro<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>EM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>EM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>functions<sp/>prototypes<sp/>---------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32f4xx__it_8h_1a6ad7a5e3ee69cb6db6a6b9111ba898bc" kindref="member">NMI_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32f4xx__it_8h_1a2bffc10d5bd4106753b7c30e86903bea" kindref="member">HardFault_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32f4xx__it_8h_1a3150f74512510287a942624aa9b44cc5" kindref="member">MemManage_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32f4xx__it_8h_1a850cefb17a977292ae5eb4cafa9976c3" kindref="member">BusFault_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32f4xx__it_8h_1a1d98923de2ed6b7309b66f9ba2971647" kindref="member">UsageFault_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32f4xx__it_8h_1a3e5ddb3df0d62f2dc357e64a3f04a6ce" kindref="member">SVC_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32f4xx__it_8h_1adbdfb05858cc36fc520974df37ec3cb0" kindref="member">DebugMon_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32f4xx__it_8h_1a6303e1f258cbdc1f970ce579cc015623" kindref="member">PendSV_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32f4xx__it_8h_1ab5e09814056d617c521549e542639b7e" kindref="member">SysTick_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32f4xx__it_8h_1a38ad4725462bdc5e86c4ead4f04b9fc2" kindref="member">TIM2_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32f4xx__it_8h_1a7133f3f78767503641d307386e68bd28" kindref="member">TIM4_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32f4xx__it_8h_1a0839a45f331c4c067939b9c4533bbf4d" kindref="member">TIM6_DAC_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32f4xx__it_8h_1a98cff83252098363b2dbca9608df964e" kindref="member">TIM7_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>EFP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>EFP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__STM32F4xx_IT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/************************<sp/>(C)<sp/>COPYRIGHT<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Core/Inc/stm32f4xx_it.h"/>
  </compounddef>
</doxygen>
